REPORT zsd_email_dealer_birthday_wish.

TABLES: kna1,adr6.

TYPES : BEGIN OF ty_kna1,
          kunnr TYPE kna1-kunnr,
          telf1 TYPE kna1-telf1,
          adrnr TYPE kna1-adrnr,
        END OF ty_kna1.

TYPES : BEGIN OF ty_adr6,
          addrnumber TYPE adr6-addrnumber,
          smtp_addr  TYPE adr6-smtp_addr,
        END OF ty_adr6.

TYPES : BEGIN OF ty_output.
          INCLUDE TYPE zsd_dealer_dob.
TYPES: END OF ty_output.


DATA : subject TYPE char50.

DATA : date_on_subject TYPE char10.

DATA : output_message TYPE string.

DATA : lo_mime_helper TYPE REF TO cl_gbt_multirelated_service,
       lo_bcs         TYPE REF TO cl_bcs,
       lo_doc_bcs     TYPE REF TO cl_document_bcs,
       lo_recipient   TYPE REF TO if_recipient_bcs,
       lt_soli        TYPE TABLE OF soli,
       ls_soli        TYPE soli,
       lv_status      TYPE bcs_rqst.

SELECTION-SCREEN: BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.
  SELECT-OPTIONS : s_date FOR kna1-erdat OBLIGATORY NO INTERVALS NO-EXTENSION DEFAULT sy-datum,
                   s_code FOR kna1-kunnr NO INTERVALS NO-EXTENSION.
SELECTION-SCREEN: END OF BLOCK b1.

START-OF-SELECTION.

  SELECT dealer_code,
         dealer_name,
         dob,
         dealer_owner_name
    FROM zsd_dealer_dob
    INTO TABLE @DATA(lt_dob_1)
    WHERE dealer_code IN @s_code.
  DATA(lt_dob) = lt_dob_1[].
  REFRESH lt_dob.
  LOOP AT lt_dob_1 INTO DATA(ls_dob1).
    IF ls_dob1-dob+4(4) = s_date-low+4(4).
      APPEND ls_dob1 TO lt_dob.
    ENDIF.
  ENDLOOP.

  IF lt_dob IS NOT INITIAL.

    SELECT kunnr,
           adrnr
     FROM kna1
      INTO TABLE @DATA(lt_kna1)
      FOR ALL ENTRIES IN @lt_dob
      WHERE kunnr = @lt_dob-dealer_code.

    IF  sy-subrc = 0 AND  lt_kna1 IS NOT INITIAL.
      SELECT addrnumber,
             smtp_addr
        FROM adr6
        INTO TABLE @DATA(lt_adr6)
        FOR ALL ENTRIES IN @lt_kna1
        WHERE addrnumber = @lt_kna1-adrnr.
    ENDIF.


    DATA : mail_date TYPE char10.

    CLEAR mail_date.
    CONCATENATE s_date+6(2) '/' s_date+4(2) '/' s_date+0(4) INTO mail_date.
    CONDENSE mail_date NO-GAPS.

    LOOP AT lt_dob INTO DATA(lwa_dob).
      CLEAR : lo_bcs,lo_doc_bcs,lo_mime_helper,lo_recipient.
      REFRESH : lt_soli[].
      READ TABLE lt_kna1 INTO DATA(lwa_kna1) WITH KEY kunnr = lwa_dob-dealer_code.
      IF sy-subrc IS INITIAL.
        READ TABLE lt_adr6 INTO DATA(lwa_adr6) WITH KEY addrnumber = lwa_kna1-adrnr.
        IF sy-subrc = 0 AND lwa_adr6-smtp_addr IS NOT INITIAL.

          CLEAR: ls_soli,lt_soli[].
          CREATE OBJECT lo_mime_helper.

          ls_soli-line = '<!DOCTYPE html PUBLIC â€œ-//IETF//DTD HTML 5.0//EN">'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '<HTML>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '<BODY>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '<p>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          CONCATENATE 'Happy Birthday,' '' lwa_dob-dealer_owner_name '!' INTO ls_soli-line SEPARATED BY space.
*          ls_soli-line = 'Happy Birthday'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '<BR></BR>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          CONCATENATE :'Wishing you continued success and well-being in the year ahead.'
                          '.' INTO ls_soli-line SEPARATED BY space.
          APPEND ls_soli-line TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '<BR></BR>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = 'Regards,'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '<BR></BR>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = 'Finolex Pipes & Fittings.'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '<BR></BR>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '<B>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '***********This is Auto generated mail. Please do not reply***********'.
          APPEND ls_soli TO lt_soli.

          ls_soli-line = '</B>'.
          APPEND ls_soli TO lt_soli.

          ls_soli-line = '</P>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '</BODY>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          ls_soli-line = '</HTML>'.
          APPEND ls_soli TO lt_soli.
          CLEAR ls_soli.

          " Set the HTML body of the mail
          CALL METHOD lo_mime_helper->set_main_html
            EXPORTING
              content     = lt_soli
              description = 'Happy Birthday!'.

          subject  = 'Happy Birthday!'.

          lo_doc_bcs = cl_document_bcs=>create_from_multirelated(
                    i_subject          = subject
                    i_importance       = '5'
                    i_multirel_service = lo_mime_helper ).

          lo_bcs = cl_bcs=>create_persistent( ).

          lo_bcs->set_document( i_document = lo_doc_bcs ).

          lo_recipient = cl_cam_address_bcs=>create_internet_address(
          i_address_string = lwa_adr6-smtp_addr ).

          lo_bcs->add_recipient( i_recipient = lo_recipient ).

          lv_status = 'N'.
          CALL METHOD lo_bcs->set_status_attributes
            EXPORTING
              i_requested_status = lv_status.

          TRY.
              lo_bcs->send( ).
              COMMIT WORK.
              SKIP.
              ULINE.
              WRITE: lwa_kna1-kunnr, lwa_adr6-smtp_addr , 'Success'.
              ULINE.
              SKIP.
            CATCH cx_bcs INTO DATA(lx_bcs).
              ROLLBACK WORK.
          ENDTRY.
        ELSE.
          SKIP.
          ULINE.
          WRITE: lwa_kna1-kunnr, 'Email ID Not Available!'.
          ULINE.
          SKIP.
        ENDIF.
      ENDIF.
      CLEAR : lwa_adr6,lwa_kna1.
    ENDLOOP.

  ELSE.

    MESSAGE 'No Data Found' TYPE 'E'.
    LEAVE LIST-PROCESSING.

  ENDIF.

*--------------------------------------------------------------------*
